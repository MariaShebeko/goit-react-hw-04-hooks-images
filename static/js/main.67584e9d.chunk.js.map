{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/LoadMoreButton/LoadMoreButton.module.css","components/Modal/Modal.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","helpers/toastify.js","services/image-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/ImageGallery/GalleryErrorView/GalleryErrorView.js","components/Loader/Loader.js","components/LoadMoreButton/LoadMoreButton.js","components/Modal/Modal.js","App.js","index.js"],"names":["module","exports","toastify","message","toast","warning","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","theme","api","fetchImage","query","page","axios","get","then","res","status","data","hits","length","Promise","reject","Error","Searchbar","onSubmit","useState","imageName","setImageName","className","s","SearchForm","event","preventDefault","trim","type","SearchFormButton","label","onChange","currentTarget","value","toLowerCase","input","autoComplete","autoFocus","placeholder","ImageGalleryItem","onClick","webformatURL","tags","largeImageURL","id","src","alt","srcmodal","image","ImageGallery","images","map","ImageErrorView","role","ImageLoader","Loader","color","height","width","timeout","LoadMoreButton","button","icon","modalRoot","document","querySelector","Modal","modalUrl","modalAlt","onClose","useEffect","handleKeyDown","evt","code","window","addEventListener","removeEventListener","createPortal","overlay","target","modal","App","setImages","setPage","error","setError","setStatus","loading","setLoading","showModal","setShowModal","setModalUrl","setModalAlt","imageAPI","resImages","catch","finally","text","e","nodeName","imageModal","getAttribute","altModal","options","top","behavior","pageYOffset","documentElement","clientHeight","setTimeout","console","log","scrollTo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.67584e9d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3_NAC\",\"text\":\"ImageGallery_text__2Sl5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1efxW\",\"image\":\"ImageGalleryItem_image__HsT36\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"LoadMoreButton_button__2QKag\",\"icon\":\"LoadMoreButton_icon__26EBM\",\"spin\":\"LoadMoreButton_spin__RGPMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2Arkf\",\"modal\":\"Modal_modal__1rLrW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3Fqzc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__YD-hB\",\"SearchForm\":\"Searchbar_SearchForm__Gwzfa\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1oSES\",\"label\":\"Searchbar_label__3oVZZ\",\"input\":\"Searchbar_input__2ZcgT\",\"SearchForm-input\":\"Searchbar_SearchForm-input__2Xorl\"};","import { toast } from 'react-toastify';\n\nconst toastify = message => {\n  return toast.warning(message, {\n    position: 'top-right',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    theme: 'dark',\n  });\n};\n\nexport default toastify;\n","import axios from 'axios';\n\nconst API_KEY = '23951703-436932e17dab2edd529d032c5';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction fetchImage(query, page) {\n  return axios\n    .get(\n      `${BASE_URL}?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(res => {\n      if (res.status === 200 && res.data.hits.length !== 0) {\n        return res.data.hits;\n      } else {\n        return Promise.reject(new Error('No images with this name'));\n      }\n    });\n}\n\nconst api = {\n  fetchImage,\n};\n\nexport default api;\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FaSistrix } from 'react-icons/fa';\r\nimport toastify from '../../helpers/toastify';\r\nimport s from './Searchbar.module.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [imageName, setImageName] = useState('');\r\n\r\n  const handleNameChange = event => {\r\n    setImageName(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleNameSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (imageName.trim() === '') {\r\n      toastify('Press the name of the image!');\r\n    }\r\n    onSubmit(imageName);\r\n    setImageName('');\r\n  };\r\n\r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={handleNameSubmit}>\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.label}>Search</span> <FaSistrix />\r\n        </button>\r\n        <input\r\n          onChange={handleNameChange}\r\n          value={imageName}\r\n          className={s.input}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = (\n  { webformatURL, tags, largeImageURL, id },\n  onClick,\n) => {\n  return (\n    <li className={s.ImageGalleryItem} key={`id_${id}`}>\n      <img\n        onClick={onClick}\n        id={id}\n        src={webformatURL}\n        alt={tags}\n        srcmodal={largeImageURL}\n        className={s.image}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, onClick }) => {\n  return (\n    <ul className={s.ImageGallery}>\n      {images.map(image => ImageGalleryItem(image, onClick))}\n    </ul>\n  );\n};\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func.isRequired,\n};\n","export default function ImageErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>{message}</p>\n    </div>\n  );\n}\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nexport default function ImageLoader() {\n  return (\n    <div className={s.Loader}>\n      <Loader\n        type=\"Plane\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","import { BiLoader } from 'react-icons/bi';\nimport s from './LoadMoreButton.module.css';\n\nconst LoadMoreButton = ({ onClick }) => {\n  return (\n    <button className={s.button} type=\"button\" onClick={() => onClick()}>\n      <BiLoader className={s.icon} /> <span>Load more</span>\n    </button>\n  );\n};\n\nexport default LoadMoreButton;\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default function Modal({ modalUrl, modalAlt, onClose }) {\r\n  useEffect(() => {\r\n    const handleKeyDown = evt => {\r\n      if (evt.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const onBackdropClick = evt => {\r\n    if (evt.currentTarget === evt.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.overlay} onClick={onBackdropClick}>\r\n      <div className={s.modal}>\r\n        <img src={modalUrl} alt={modalAlt}></img>\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  modalUrl: PropTypes.string.isRequired,\r\n  modalAlt: PropTypes.string.isRequired,\r\n};\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport toastify from './helpers/toastify';\r\nimport imageAPI from './services/image-api';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport ImageErrorView from './components/ImageGallery/GalleryErrorView/GalleryErrorView';\r\nimport ImageLoader from './components/Loader';\r\nimport LoadMoreButton from './components/LoadMoreButton';\r\nimport Modal from './components/Modal';\r\nimport s from './components/ImageGallery/ImageGallery.module.css';\r\n\r\nexport default function App() {\r\n  const [images, setImages] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [imageName, setImageName] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState('idle');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalUrl, setModalUrl] = useState('');\r\n  const [modalAlt, setModalAlt] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (imageName) {\r\n      setStatus('pending');\r\n\r\n      imageAPI\r\n        .fetchImage(imageName, page)\r\n        .then(resImages => {\r\n          if (resImages.length === 0) {\r\n            toastify('Nothing found on your request!');\r\n          } else {\r\n            setImages([...images, ...resImages]);\r\n            setStatus('resolved');\r\n            setModalUrl(resImages.largeImageURL);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setError(error);\r\n          setStatus('rejected');\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }, [page, imageName]);\r\n\r\n  const onLoadMore = () => {\r\n    setLoading(true);\r\n    setPage(page + 1);\r\n\r\n    const options = {\r\n      top: null,\r\n      behavior: 'smooth',\r\n    };\r\n    options.top = window.pageYOffset + document.documentElement.clientHeight;\r\n    setTimeout(() => {\r\n      console.log('scrol');\r\n\r\n      window.scrollTo(options);\r\n    }, 1000);\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const onImageClick = e => {\r\n    if (e.target.nodeName !== 'IMG') {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n\r\n    const imageModal = e.target.getAttribute('srcmodal');\r\n    const altModal = e.target.getAttribute('alt');\r\n\r\n    setShowModal(true);\r\n    setModalUrl(imageModal);\r\n    setModalAlt(altModal);\r\n  };\r\n\r\n  const handleSearchBarSubmit = imageName => {\r\n    setImageName(imageName);\r\n    setImages([]);\r\n    setPage(1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={handleSearchBarSubmit} />\r\n      <ToastContainer />\r\n\r\n      {status === 'idle' && (\r\n        <div className={s.text}>Press the name of the image</div>\r\n      )}\r\n      <ImageGallery images={images} onClick={onImageClick} />\r\n      {status === 'pending' && <ImageLoader />}\r\n\r\n      {status === 'rejected' && <ImageErrorView message={error.message} />}\r\n\r\n      {status === 'resolved' && (\r\n        <>\r\n          {showModal && (\r\n            <Modal\r\n              onClose={toggleModal}\r\n              modalUrl={modalUrl}\r\n              modalAlt={modalAlt}\r\n            />\r\n          )}\r\n          {images.length > 11 && !loading && (\r\n            <LoadMoreButton onClick={onLoadMore} />\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}